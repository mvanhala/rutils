% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render.R
\name{render_doc}
\alias{render_doc}
\title{Render an R Markdown document}
\usage{
render_doc(
  input,
  input_basedir = fs::path(rprojroot::find_rstudio_root_file(), "code"),
  output_basedir = "gitlab",
  output_file = fs::path_ext_set(fs::path_file(input), "html"),
  params = NULL,
  open = FALSE,
  ...
)
}
\arguments{
\item{input}{Input file}

\item{input_basedir}{Base input directory (\code{code} by default)}

\item{output_basedir}{Base output directory. Can also specify \code{GitHub} or \code{GitLab}, in which case
the folder will be the \code{docs} or \code{public} directory, respectively.}

\item{output_file}{Output filename}

\item{params}{Parameters in the R Markdown document to execute}

\item{open}{Whether to open the output document using \link[rstudioapi:viewer]{rstudioapi::viewer}}

\item{...}{Additional arguments passed to \link[rmarkdown:render]{rmarkdown::render}}
}
\description{
\code{render_doc} renders an R Markdown in a fresh R process using
\code{callr}
}
\details{
This function assumes you are working within a project structure,
specifically an RStudio project. The output file will be saved at the
same location relative to \code{output_basedir} as \code{input} is
relative to \code{input_basedir}. For example, using the defaults,
if the input file is \code{code/folder1/folder2/report.Rmd}, the
output file will be saved to \code{output/folder1/folder2/report.Rmd}.
The user may select base input and output directories, relative
to which the paths are computed.

To use this function in a R Markdown document, you can place the following
line in the YAML header:

\code{knit: (function(inputFile, encoding) rutils::render_doc(inputFile))}
}
